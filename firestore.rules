rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user owns the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Rules for scheduled_pickups collection
    match /scheduled_pickups/{pickupId} {
      // Allow reading if the user owns the document
      allow get: if isOwner(resource.data.userId);
      
      // Allow listing if the user is authenticated
      allow list: if isAuthenticated();
      
      // Allow creating if the user is authenticated and sets their own userId
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      
      // Allow updating if the user owns the document
      allow update: if isOwner(resource.data.userId);
      
      // Allow deleting if the user owns the document
      allow delete: if isOwner(resource.data.userId);
    }

    // Rules for users collection
    match /users/{userId} {
      // Allow reading if the user owns the document
      allow get: if isOwner(userId);
      
      // Allow creating if the user is authenticated and sets their own userId
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      
      // Allow updating if the user owns the document
      allow update: if isOwner(userId);
    }
  }
} 